<?php
/**
 * @author Ferdy Perdaan
 * @version 1.0
 *
 * Render interface for cache builder
 */

$base = plugins_url('/resource/', __DIR__);

wp_enqueue_script('cache-builder', $base . 'js/jquery.builder.js', array('jquery'));
wp_enqueue_style('cache-builder', $base . 'style/style.builder.css');

echo '<div class = "wrap lead-single">' .
    	'<h2>' . __('Cache builder', 'xlii-cache') . '</h2>' .
		'<div  id = "poststuff">' .

    		'<div id = "post-body" class = "metabox-holder columns-2">' .
    			'<div id = "postbox-container" class = "postbox-container meta-box-sortables">';

// -- Render primary content
$contexts = !empty($_GET['context']) ? (array)$_GET['context'] : array('post', 'taxonomy','user');

$mapper = array(
	'post' => __('Posts', 'xlii-cache'),
	'term' => __('Taxonomy', 'xlii-cache'),
	'taxonomy' => __('Taxonomy', 'xlii-cache'),
	'user' => __('User', 'xlii-cache')
);

foreach($contexts as $context) 
{
	$context = sanitize_title($context);
    $parts = explode('-', $context, 2);
    
	if(empty($parts[0]) || empty($mapper[$parts[0]]))
		continue;

    $title = $mapper[$parts[0]];

	if (!empty($parts[1])) 
	{
		switch($parts[0])
		{
			case 'term':
				global $wpdb;
				
				$term = !empty($parts[1]) ? intval($parts[1]) : 0;
				$term = $wpdb->get_row($wpdb->prepare('SELECT term_id, taxonomy FROM ' . $wpdb->term_taxonomy . ' WHERE term_taxonomy_id = %d', $term));
			
				if(!empty($term) && ($tax = get_taxonomy($term->taxonomy)) && $term = get_term($term->term_id, $term->taxonomy))
					$title .= ' <small>[' . $tax->labels->singular_name . '] [' . $term->name . ']</small>';
				else
					continue;
			
				break;
			
			case 'taxonomy':
				if($tax = get_taxonomy($parts[1]))
					$title .= ' <small>[' . $tax->labels->singular_name . ']</small>';
				else
					continue;
			
				break;
			
			case 'post':
				if(is_numeric($parts[1]) && $post = get_post($parts[1]))
				{
					$type   = get_post_type_object($post->post_type);
					$title .= ' <small>[' . $type->labels->singular_name . '] [' . esc_html($post->post_title) . ']</small>';
				}
				else
				{
					continue;
				}
			
				break;
			
			case 'user':
				if(is_numeric($parts[1]) && $user = get_userdata($parts[1]))
					$title .= ' <small>[' . $user->display_name . ']</small>';
				else
					continue;
			
				break;
		}	
    } 

    echo $this->metaboxHeader(
			'<span>' . $title . '</span>' .
			'<div class = "url-count url-count-' . $context . '">' .
				'<span class = "count">0</span>/<span class = "total">0</span>' .
			'</div>'
		 );

    echo '<table id="table-' . $context . '" class = "wp-list-table widefat fixed table-urls table-' . $context . '">' .
        	'<thead>' .
        		'<tr>' .
        			'<th class = "column-path">' . __('Url', 'xlii-cache') . '</th>' .
        			'<th class = "column-statuscode">' . __('Status', 'xlii-cache') . '</th>' .
        			'<th class = "column-load-time">' . __('Load time', 'xlii-cache') . '</th>';
					
 	 do_action('cache_request_columns_' . $parts[0], $context);
 	 do_action('cache_request_columns', $context);


     echo  		'</tr>' .
        	'</thead>' .
        	'<tbody>';

    echo '</tbody>' .
        '</table>';

    echo $this->metaboxFooter();

}


echo	'</div>' .
    	'<div id = "postbox-container-1" class = "postbox-container meta-box-sortables">';

// -- Render sidebar
{

    echo $this->metaboxHeader(__('Statistics', 'xlii-cache'), 'submitdiv') .
        '<div class = "submitbox progress-stat" id = "submitpost">' .
        	'<div id="minor-publishing" class = "custom">';


    // Render information
    echo '<div class = "misc-pub-section">' .
        	'<span class="dashicons dashicons-clock"></span> ' .
        	__('Time:', 'xlii-cache') . ' <strong class = "timer">00:00</strong>' .
        '</div>';

    echo '<div class = "misc-pub-section">' .
        	'<span class="dashicons dashicons-backup"></span> ' .
        	__('Progress', 'lms') . ': <strong class = "progress">0%</strong>' .
        '</div>';

    echo '<div class = "misc-pub-section">' .
        	'<span class="dashicons dashicons-admin-links"></span> ' .
        	__('Urls:', 'xlii-cache') . ' <strong class = "url-count"><span class = "count">0</span>/<span class = "total">0</span></strong>' .
        '</div>';

    echo '<div class = "misc-pub-section">' .
        	'<span class="dashicons dashicons-dashboard"></span> ' .
        	__('Urls per minute:', 'xlii-cache') . ' <strong class = "urls-per-minute">0</strong>' .
        '</div>';

    // Delete action
    echo '<div id="major-publishing-actions">' .
        	'<a class="submitdelete deletion pause-toggle action-pause" href="#">' . __('Pause', 'xlii-cache') . '</a>' .
        	'<a class="submitdelete deletion pause-toggle action-continue" href="#">' . __('Continue', 'xlii-cache') . '</a>' .
         '</div>';

    echo 	'</div>' .
        '</div>' .
        $this->metaboxFooter();

    echo $this->metaboxHeader(__('Request Settings', 'xlii-cache'), 'submitdiv') .
        '<div class = "submitbox request-settings" id = "submitpost">' .
        	'<div id="minor-publishing" class = "custom">';


    // Render information
    echo '<div class="misc-pub-section slider-container">' .
			'<strong>' . __('Urls per batch', 'xlii-cache') . '</strong></br>' .
			'<input class="url-slider batch-size" type="range" min="0" max="10" step="1" value="5" / >' .
			
    		'<span class="slider-min">0</span>' .
			'<span class="slider-value">5</span>' .
			'<span class ="slider-max">10</span>' .
		  '</div>';

    echo '<div class="misc-pub-section slider-container">' .
			'<strong>' . __('Timeout per batch in seconds', 'xlii-cache') . '</strong></br>' . 
			
			'<input class="timeout-slider batch-timeout" type="range" min="0" max="10" step="1" value="3" / >' .
        	'<span class="slider-min">0</span>' .
			'<span class="slider-value">3</span>' . 
			'<span class ="slider-max">10</span>' .
		 '</div>';

    echo 	'</div>' .
        '</div>' .
        $this->metaboxFooter();

}
echo			'</div>' .
	    	'</div>' .
		'</div>' .
    '</div>';